<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://IamAlchemist.github.io/atom.xml" rel="self"/>
  <link href="http://IamAlchemist.github.io/"/>
  <updated>2014-11-18T14:27:11+08:00</updated>
  <id>http://IamAlchemist.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What's Cookie]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/11/18/whats-cookie/"/>
    <updated>2014-11-18T10:45:25+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/11/18/whats-cookie</id>
    <content type="html"><![CDATA[<h3>Cookie使用的典型场景</h3>

<ul>
<li>使用用户名和口令，通过 SSL 登录</li>
<li>在服务器的数据库里检查用户名和口令。如果登录成功，建立一个当前时间标签的消息摘要 (比如 MD5) ，并把它保存在cookie和服务器数据库里。把用户的登录时间保存在服务器数据库里面的用户记录里</li>
<li>在进行每个安全事务时（用户处于登录状态的任何事务），把cookie的消息摘要和保存在服务器数据库里的摘要进行比较，如果比较失败，就把用户引导到登录界面</li>
<li>如果第3步检查通过，那么检查当前时间和登录时间之音经过的时间是否超过允许的时间长度。如果用户已经超时，那么就把用户引到登录界面。</li>
<li>如果第3步和第4步都通过了，那么把登录时间重新设置成当前时间，允许事务发生。</li>
</ul>


<h3>Cookie Sample</h3>

<pre><code>name=&lt;value&gt;[; expires=&lt;date&gt;][; domain=&lt;domain&gt;][; path=&lt;path&gt;][; secure]
</code></pre>

<h3>Cookie的构成</h3>

<p>在Javascript脚本里，一个cookie 实际就是一个字符串属性。当你读取cookie的值时，就得到一个字符串，里面当前WEB页使用的所有cookies的名称和值。每个cookie除了name名称和value值这两个属性以外，还有四个属性。这些属性是： expires过期时间、 path路径、 domain域、以及 secure安全。</p>

<ul>
<li><p>Expires – 过期时间。指定cookie的生命期。具体是值是过期日期。如果想让cookie的存在期限超过当前浏览器会话时间，就必须使用这个属性。当过了到期日期时，浏览器就可以删除cookie文件，没有任何影响。</p></li>
<li><p>Path – 路径。指定与cookie关联的WEB页。值可以是一个目录，或者是一个路径。如果&#8221;<a href="http://www.zdnet.com/devhead/index.html">http://www.zdnet.com/devhead/index.html</a>&#8221; 建立了一个cookie，那么在&#8221;<a href="http://www.zdnet.com/devhead/">http://www.zdnet.com/devhead/</a>&ldquo; 目录里的所有页面，以及该目录下面任何子目录里的页面都可以访问这个cookie。这就是说，在&#8221;<a href="http://www.zdnet.com/devhead/stories/articles">http://www.zdnet.com/devhead/stories/articles</a>&rdquo; 里的任何页面都可以访问&#8221;<a href="http://www.zdnet.com/devhead/index.html">http://www.zdnet.com/devhead/index.html</a>&#8221; 建立的cookie。但是，如果&#8221;<a href="http://www.zdnet.com/zdnn/">http://www.zdnet.com/zdnn/</a>&ldquo; 需要访问&#8221;<a href="http://www.zdnet.com/devhead/index.html">http://www.zdnet.com/devhead/index.html</a>&rdquo; 设置的cookies，该怎么办？这时，我们要把cookies的path属性设置成“/”。在指定路径的时候，凡是来自同一服务器，URL里有相同路径的所有WEB页面都可以共享cookies。现在看另一个例子：如果想让&#8221;<a href="http://www.zdnet.com/devhead/filters/">http://www.zdnet.com/devhead/filters/</a>&ldquo; 和&#8221;<a href="http://www.zdnet.com/devhead/stories/">http://www.zdnet.com/devhead/stories/</a>&#8220;共享cookies，就要把path设成“/devhead”。</p></li>
</ul>


<p>Domain – 域。指定关联的WEB服务器或域。值是域名，比如zdnet.com。这是对path路径属性的一个延伸。如果我们想让catalog.mycompany.com 能够访问shoppingcart.mycompany.com设置的cookies，该怎么办? 我们可以把domain属性设置成“mycompany.com”，并把path属性设置成“/”。FYI：不能把cookies域属性设置成与设置它的服务器的所在域不同的值。</p>

<p>Secure – 安全。指定cookie的值通过网络如何在用户和WEB服务器之间传递。这个属性的值或者是“secure”，或者为空。缺省情况下，该属性为空，也就是使用不安全的HTTP连接传递数据。如果一个 cookie 标记为secure，那么，它与WEB服务器之间就通过HTTPS或者其它安全协议传递数据。不过，设置了secure属性不代表其他人不能看到你机器本地保存的cookie。换句话说，把cookie设置为secure，只保证cookie与WEB服务器之间的数据传输过程加密，而保存在本地的cookie文件并不加密。如果想让本地cookie也加密，得自己加密数据。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Lock the Screen in Mac]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/10/30/how-to-lock-the-screen-in-mac/"/>
    <updated>2014-10-30T16:46:20+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/10/30/how-to-lock-the-screen-in-mac</id>
    <content type="html"><![CDATA[<ul>
<li>use &ldquo;Automator&rdquo; create a service, then set the input as &ldquo;no input&rdquo;.</li>
<li><p>drag &ldquo;Run shell script&rdquo; to the editor in right side, then</p>

<pre><code>  '/System/Library/CoreServices/Menu Extras/User.menu/Contents/Resources/CGSession' -suspend
</code></pre></li>
<li><p>save the service as &ldquo;lockscreen&rdquo;</p></li>
<li>set the shortcut key for the service in keyboard->shortcut keys</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Core Objects for App]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/10/27/the-core-objects-for-app/"/>
    <updated>2014-10-27T14:20:29+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/10/27/the-core-objects-for-app</id>
    <content type="html"><![CDATA[<ul>
<li><p>Key objects in a single-window app
<img src="http://IamAlchemist.github.io/images/single-window-app.png"></p></li>
<li><p>Key objects in a multi-window app
<img src="http://IamAlchemist.github.io/images/multi-window-app.png"></p></li>
<li><p>Windows and menus displayed by apps &amp; the system
<img src="http://IamAlchemist.github.io/images/window_layer_image.png"></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Glance at App Design Pattern]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/10/24/a-glance-at-app-design-pattern/"/>
    <updated>2014-10-24T18:09:53+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/10/24/a-glance-at-app-design-pattern</id>
    <content type="html"><![CDATA[<ul>
<li><p>Model-View-Controller
<img src="http://IamAlchemist.github.io/images/model_view_controller.png"></p></li>
<li><p>Delegation: Action on Behalf of Another Object
<img src="http://IamAlchemist.github.io/images/delegation.png"></p></li>
<li><p>Protocol: Enabling Communication Between Objects Not Related by Inheritance
<img src="http://IamAlchemist.github.io/images/protocol.png"></p></li>
<li><p>Notification Center: Nofifying Interested Observers of an Event
<img src="http://IamAlchemist.github.io/images/notificationcenter.png"></p></li>
<li><p>Target-Action: Encapsulating a Message to be Sent When an Event Occurs
<img src="http://IamAlchemist.github.io/images/target_action.png"></p></li>
<li><p>Key-Value Observing: Notifying an Observer When a Value Changes
<img src="http://IamAlchemist.github.io/images/kvo.png"></p></li>
<li><p>View hierarchy</p></li>
<li>Responder chain</li>
<li>Receptionist</li>
<li>Category</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown Syntax]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/09/29/mark-syntax/"/>
    <updated>2014-09-29T22:35:48+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/09/29/mark-syntax</id>
    <content type="html"><![CDATA[<pre><code>#h1
###h3
######h6

&gt;this is a
pargraph, haha

* Red
* Blue


markdown paragraph .... between emtpy lines

this is a paragraph

this is a H1
=

this is a H2
-

*  This is a list item with two paragraphs. Lorem ipsum dolor
   sit amet, consectetuer adipiscing elit. Aliquam hendrerit
   mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
        sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.

****

*thex*
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Publish the Blog]]></title>
    <link href="http://IamAlchemist.github.io/blog/2014/09/29/how-to-publish-the-blog/"/>
    <updated>2014-09-29T21:37:35+08:00</updated>
    <id>http://IamAlchemist.github.io/blog/2014/09/29/how-to-publish-the-blog</id>
    <content type="html"><![CDATA[<pre><code>rake new_post["title"]
rake generate
rake watch
rake preview
rake deploy

git add .
git commit -m "new blog"
git push origin source

cd _deploy
git push -u gitcafe master:gitcafe-pages
</code></pre>
]]></content>
  </entry>
  
</feed>
